(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{345:function(t,s,a){"use strict";a.r(s);var r=a(0),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#ssr-vs-csr"}},[t._v("SSR vs CSR")]),a("ul",[a("li",[a("a",{attrs:{href:"#csr"}},[t._v("CSR")])]),a("li",[a("a",{attrs:{href:"#ssr"}},[t._v("SSR")])])])]),a("li",[a("a",{attrs:{href:"#神奇的-nuxt-路由"}},[t._v("神奇的 Nuxt 路由")]),a("ul",[a("li",[a("a",{attrs:{href:"#路由预加载"}},[t._v("路由预加载")])]),a("li",[a("a",{attrs:{href:"#传参"}},[t._v("传参")])])])]),a("li",[a("a",{attrs:{href:"#视图-布局"}},[t._v("视图 & 布局")])]),a("li",[a("a",{attrs:{href:"#中间件"}},[t._v("中间件")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"ssr-vs-csr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr-vs-csr"}},[t._v("#")]),t._v(" SSR vs CSR")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://q2y15i2rd.bkt.clouddn.com/ssr3.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"csr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csr"}},[t._v("#")]),t._v(" CSR")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://q2y15i2rd.bkt.clouddn.com/ssr2.png",alt:""}})]),t._v(" "),a("p",[t._v("CSR(client side render): 前端渲染。")]),t._v(" "),a("p",[t._v('当用户在浏览器中输入网址 url 时，服务器会去寻找对应的 html 文件(携带 js 文件)发送到前端，前端接收到 html 文件后进行初步渲染生成最初的 DOM tree。当自上朝下地渲染遇到 JS 文件时发生阻塞，先去执行 JS 文件中的代码，js 可能会对 DOM 进行操作，DOM 可能会发生 reflow 等操作，或者在 js 中发起了其它请求，被请求得到的数据返回前端后与最初的 html 进行拼接，等待 js 执行完毕后，生成最终的 html。正是因为需要等待 js 代码全部执行完毕等情况，用户在点开页面时会出现一段时间地"白屏"。\n最终的 html 不一定拥有最终完整的 html 结构，可能只是部分的结构(剩余的结构由 JS 进行 dom 操作或发送请求得来)，因此不完整的 html 结构不适合做 SEO 搜索。')]),t._v(" "),a("p",[t._v("特点：首屏加载速度慢，首屏加载后的其它加载速度快，适合用户交互。")]),t._v(" "),a("h3",{attrs:{id:"ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr"}},[t._v("#")]),t._v(" SSR")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://q2y15i2rd.bkt.clouddn.com/ssr1.png",alt:""}})]),t._v(" "),a("p",[t._v("SSR(server side render): 服务端渲染。")]),t._v(" "),a("p",[t._v("当用户在浏览器中输入网址 url 时，会在服务器中使用模板语言或 "),a("code",[t._v("node")]),t._v(" 等方式将数据与 html 字符串进行拼接，然后将一整个拼接好的 html 返回给客户端，客户端直接渲染完整的 html。因此返回给前端的 html 是完整的，适合爬虫等工具去搜索。")]),t._v(" "),a("p",[a("code",[t._v("Nuxt.js")]),t._v(" 中，用户输入的 url 即是 "),a("code",[t._v("Nuxt.js")]),t._v(" 中约定的路由，在服务端中跑了 "),a("code",[t._v("vue.js")]),t._v(", 解析了 template 中的内容，通过 "),a("code",[t._v("vue")]),t._v(" 渲染出首屏内容，并返回给客户端一个 spa 脚本，而这些脚本到了前端后都是延迟加载的，正如图中所示，服务端传的首屏幕仅是 viewable, 仍然还需要在客户端下载 js 等文件并挂载 js 事件等。")]),t._v(" "),a("p",[t._v("特点：首屏加载速度快，适合SEO。")]),t._v(" "),a("blockquote",[a("p",[t._v("简而言之，就是数据拼接HTML字符串这件事放在服务端还是客户端造成了两者区别。")])]),t._v(" "),a("h2",{attrs:{id:"神奇的-nuxt-路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#神奇的-nuxt-路由"}},[t._v("#")]),t._v(" 神奇的 Nuxt 路由")]),t._v(" "),a("p",[t._v("众所周知，在nuxt中路由跳转时，可以使用"),a("code",[t._v("<nuxt-link></nuxt-link>")]),t._v("标签。")]),t._v(" "),a("h3",{attrs:{id:"路由预加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由预加载"}},[t._v("#")]),t._v(" 路由预加载")]),t._v(" "),a("p",[t._v("当用户访问某个页面时，"),a("code",[t._v("Nuxt.js")]),t._v(" 发现了页面中包含 "),a("code",[t._v("nuxt-link")]),t._v("，会进行预加载，即先将 "),a("code",[t._v("nuxt-link")]),t._v(" 标签中的页面先下载下来，优点在于，在进入 "),a("code",[t._v("nuxt-link")]),t._v(" 的页面时就不需要再加载了，加载速度更快。")]),t._v(" "),a("h4",{attrs:{id:"no-prefetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-prefetch"}},[t._v("#")]),t._v(" no-prefetch")]),t._v(" "),a("p",[t._v("当一些页面模块内部过大，预加载会导致当前页面加载速度慢，可使用 "),a("code",[t._v("no-prefetch")]),t._v(" 属性，禁止预加载：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("nuxt-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("no-prefetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("nuxt-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传参"}},[t._v("#")]),t._v(" 传参")]),t._v(" "),a("p",[t._v("例如，想跳转到路由为 "),a("code",[t._v("/main/:id")]),t._v(" 的路径时:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("nuxt-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ name: 'main-id, params: { id: 2 } }"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("nuxt-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"视图-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图-布局"}},[t._v("#")]),t._v(" 视图 & 布局")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("Nuxt")]),t._v(" 中，最基础的布局是在 "),a("code",[t._v("Layout")]),t._v(" 中。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("nuxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("code",[t._v("<nuxt />")]),t._v(" 标签中的内容就是 "),a("code",[t._v("pages")]),t._v(" 文件中的页面内容。")]),t._v(" "),a("h2",{attrs:{id:"中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[t._v("#")]),t._v(" 中间件")]),t._v(" "),a("p",[t._v("在任何路由执行前，执行的自定义函数是中间件。")])])}),[],!1,null,null,null);s.default=e.exports}}]);