(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{346:function(e,t,r){"use strict";r.r(t);var a=r(0),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#beforecreate"}},[e._v("beforeCreate")])]),r("li",[r("a",{attrs:{href:"#created"}},[e._v("Created")])]),r("li",[r("a",{attrs:{href:"#beforemount"}},[e._v("beforeMount")])]),r("li",[r("a",{attrs:{href:"#mounted"}},[e._v("Mounted")])]),r("li",[r("a",{attrs:{href:"#beforeupdate"}},[e._v("beforeUpdate")])]),r("li",[r("a",{attrs:{href:"#updated"}},[e._v("updated")])]),r("li",[r("a",{attrs:{href:"#beforedestroyed"}},[e._v("beforeDestroyed")])]),r("li",[r("a",{attrs:{href:"#detroyed"}},[e._v("detroyed")])]),r("li",[r("a",{attrs:{href:"#父子组件的渲染顺序"}},[e._v("父子组件的渲染顺序")])])])]),r("p"),e._v(" "),r("p",[e._v("继上一波对 "),r("code",[e._v("Vue")]),e._v(" 的响应式原理之后，自己又对照着 "),r("code",[e._v("Vue")]),e._v(" 的源码看了下，总结了下 "),r("code",[e._v("Vue")]),e._v(" 的整个生命周期都发生了什么。")]),e._v(" "),r("h2",{attrs:{id:"beforecreate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate"}},[e._v("#")]),e._v(" beforeCreate")]),e._v(" "),r("p",[e._v("刚刚 "),r("code",[e._v("new Vue()")]),e._v(" 初始化 "),r("code",[e._v("vue")]),e._v(" 实例，初始化生命周期与一些方法，可以使用混入的方法安装一些插件，如 "),r("code",[e._v("vuex。")])]),e._v(" "),r("ul",[r("li",[e._v("initLifecycle")]),e._v(" "),r("li",[e._v("initEvents")]),e._v(" "),r("li",[e._v("initRender")]),e._v(" "),r("li",[e._v("callHook(vm, 'beforeCreate')")])]),e._v(" "),r("h2",{attrs:{id:"created"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#created"}},[e._v("#")]),e._v(" Created")]),e._v(" "),r("p",[e._v("初始化完成，数据响应式绑定完成（可以访问this.$data），但是 dom 还没有挂载。")]),e._v(" "),r("ul",[r("li",[e._v("initInjections")]),e._v(" "),r("li",[e._v("initState(初始化 props、data、methods、watch、computed 等属性)")]),e._v(" "),r("li",[e._v("initProvide")]),e._v(" "),r("li",[e._v("callHook(vm, 'created')")])]),e._v(" "),r("h2",{attrs:{id:"beforemount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforemount"}},[e._v("#")]),e._v(" beforeMount")]),e._v(" "),r("p",[e._v("这个阶段前会判断是否有 options.el 与 template，如果有则执行 vm.$mount 方法，调用 render 生成 VNode 并进行 complie，该生命周期只有虚拟 dom，实际的 dom 还未挂载。")]),e._v(" "),r("ul",[r("li",[e._v("vm.$mount(判断有无el)")]),e._v(" "),r("li",[e._v("callHook(vm, 'beforeMount')")])]),e._v(" "),r("h2",{attrs:{id:"mounted"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mounted"}},[e._v("#")]),e._v(" Mounted")]),e._v(" "),r("p",[e._v("实际 dom 挂载完成，可以操作请求等副作用。")]),e._v(" "),r("ul",[r("li",[e._v("vm._render（调用createElement生成虚拟DOM，即VNode ，vm.patch方法则是根据生成的VNode Tree递归createElm方法创建真实Dom Tree挂载到Dom上）")]),e._v(" "),r("li",[e._v("callHook(vm, 'mount')")])]),e._v(" "),r("h2",{attrs:{id:"beforeupdate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate"}},[e._v("#")]),e._v(" beforeUpdate")]),e._v(" "),r("p",[e._v("数据更新后，该方法会执行watcher队列中的watcher；")]),e._v(" "),r("ul",[r("li",[e._v("data changes")]),e._v(" "),r("li",[e._v("callHook(vm, 'beforeUpdate')")])]),e._v(" "),r("h2",{attrs:{id:"updated"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#updated"}},[e._v("#")]),e._v(" updated")]),e._v(" "),r("ul",[r("li",[e._v("Virtual DOM re-render and patch")]),e._v(" "),r("li",[e._v("callHook(vm, 'updated')")])]),e._v(" "),r("h2",{attrs:{id:"beforedestroyed"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroyed"}},[e._v("#")]),e._v(" beforeDestroyed")]),e._v(" "),r("p",[e._v("vm.$destroy()：启动卸销毁过程；")]),e._v(" "),r("h2",{attrs:{id:"detroyed"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#detroyed"}},[e._v("#")]),e._v(" detroyed")]),e._v(" "),r("p",[e._v("销毁")]),e._v(" "),r("h2",{attrs:{id:"父子组件的渲染顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#父子组件的渲染顺序"}},[e._v("#")]),e._v(" 父子组件的渲染顺序")]),e._v(" "),r("ul",[r("li",[e._v("[parent]   beforeCreate")]),e._v(" "),r("li",[e._v("[parent]   created")]),e._v(" "),r("li",[e._v("[parent]   beforeMount")]),e._v(" "),r("li",[e._v("[children] beforeCreated")]),e._v(" "),r("li",[e._v("[children] created")]),e._v(" "),r("li",[e._v("[children] beforeMount")]),e._v(" "),r("li",[e._v("[children] Mounted")]),e._v(" "),r("li",[e._v("[parent]   Mounted")])]),e._v(" "),r("p",[e._v("在父组件执行到 beforeMount 后，执行 vm._render 前，要先执行子组件的整个生命周期，执行结束后再执行父组件的 vm._render")])])}),[],!1,null,null,null);t.default=v.exports}}]);